// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import us.hebi.quickbuf.ProtoEnum;
import us.hebi.quickbuf.ProtoUtil;

public final class TrackMainMissionUpdateOuterClass {
  /**
   * Protobuf enum {@code TrackMainMissionUpdate}
   */
  public enum TrackMainMissionUpdate implements ProtoEnum<TrackMainMissionUpdate> {
    /**
     * <code>TRACK_MAIN_MISSION_UPDATE_NONE = 0;</code>
     */
    TRACK_MAIN_MISSION_UPDATE_NONE("TRACK_MAIN_MISSION_UPDATE_NONE", 0),

    /**
     * <code>TRACK_MAIN_MISSION_UPDATE_AUTO = 1;</code>
     */
    TRACK_MAIN_MISSION_UPDATE_AUTO("TRACK_MAIN_MISSION_UPDATE_AUTO", 1),

    /**
     * <code>TRACK_MAIN_MISSION_UPDATE_MANUAL = 2;</code>
     */
    TRACK_MAIN_MISSION_UPDATE_MANUAL("TRACK_MAIN_MISSION_UPDATE_MANUAL", 2),

    /**
     * <code>TRACK_MAIN_MISSION_UPDATE_LOGIN_REPORT = 3;</code>
     */
    TRACK_MAIN_MISSION_UPDATE_LOGIN_REPORT("TRACK_MAIN_MISSION_UPDATE_LOGIN_REPORT", 3);

    /**
     * <code>TRACK_MAIN_MISSION_UPDATE_NONE = 0;</code>
     */
    public static final int TRACK_MAIN_MISSION_UPDATE_NONE_VALUE = 0;

    /**
     * <code>TRACK_MAIN_MISSION_UPDATE_AUTO = 1;</code>
     */
    public static final int TRACK_MAIN_MISSION_UPDATE_AUTO_VALUE = 1;

    /**
     * <code>TRACK_MAIN_MISSION_UPDATE_MANUAL = 2;</code>
     */
    public static final int TRACK_MAIN_MISSION_UPDATE_MANUAL_VALUE = 2;

    /**
     * <code>TRACK_MAIN_MISSION_UPDATE_LOGIN_REPORT = 3;</code>
     */
    public static final int TRACK_MAIN_MISSION_UPDATE_LOGIN_REPORT_VALUE = 3;

    private final String name;

    private final int number;

    private TrackMainMissionUpdate(String name, int number) {
      this.name = name;
      this.number = number;
    }

    /**
     * @return the string representation of enum entry
     */
    @Override
    public String getName() {
      return name;
    }

    /**
     * @return the numeric wire value of this enum entry
     */
    @Override
    public int getNumber() {
      return number;
    }

    /**
     * @return a converter that maps between this enum's numeric and text representations
     */
    public static ProtoEnum.EnumConverter<TrackMainMissionUpdate> converter() {
      return TrackMainMissionUpdateConverter.INSTANCE;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value, or null if unknown.
     */
    public static TrackMainMissionUpdate forNumber(int value) {
      return TrackMainMissionUpdateConverter.INSTANCE.forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @param other Fallback value in case the value is not known.
     * @return The enum associated with the given numeric wire value, or the fallback value if unknown.
     */
    public static TrackMainMissionUpdate forNumberOr(int number, TrackMainMissionUpdate other) {
      TrackMainMissionUpdate value = forNumber(number);
      return value == null ? other : value;
    }

    enum TrackMainMissionUpdateConverter implements ProtoEnum.EnumConverter<TrackMainMissionUpdate> {
      INSTANCE;

      private static final TrackMainMissionUpdate[] lookup = new TrackMainMissionUpdate[4];

      static {
        lookup[0] = TRACK_MAIN_MISSION_UPDATE_NONE;
        lookup[1] = TRACK_MAIN_MISSION_UPDATE_AUTO;
        lookup[2] = TRACK_MAIN_MISSION_UPDATE_MANUAL;
        lookup[3] = TRACK_MAIN_MISSION_UPDATE_LOGIN_REPORT;
      }

      @Override
      public final TrackMainMissionUpdate forNumber(final int value) {
        if (value >= 0 && value < lookup.length) {
          return lookup[value];
        }
        return null;
      }

      @Override
      public final TrackMainMissionUpdate forName(final CharSequence value) {
        if (value.length() == 30) {
          if (ProtoUtil.isEqual("TRACK_MAIN_MISSION_UPDATE_NONE", value)) {
            return TRACK_MAIN_MISSION_UPDATE_NONE;
          }
          if (ProtoUtil.isEqual("TRACK_MAIN_MISSION_UPDATE_AUTO", value)) {
            return TRACK_MAIN_MISSION_UPDATE_AUTO;
          }
        }
        if (value.length() == 32) {
          if (ProtoUtil.isEqual("TRACK_MAIN_MISSION_UPDATE_MANUAL", value)) {
            return TRACK_MAIN_MISSION_UPDATE_MANUAL;
          }
        }
        if (value.length() == 38) {
          if (ProtoUtil.isEqual("TRACK_MAIN_MISSION_UPDATE_LOGIN_REPORT", value)) {
            return TRACK_MAIN_MISSION_UPDATE_LOGIN_REPORT;
          }
        }
        return null;
      }
    }
  }
}
